//===== EinherjarRO Scripts ==================================
//= Auto Event
//===== By: ==================================================
//= Stolao
//===== Current Version: =====================================
//= 2.01
//===== Compatible With: =====================================
//= rAthena SVN
//===== Description: =========================================
//= Auto Event
//===== Comments: ============================================
//= [Stolao]
//	db/import/instance_db.txt
//	30,Emp Breaker,900,300,sword_1-1,215,206
//
//	src/map/chat.h
//	#define MAX_CHAT_USERS 20
//		Increase as needed for your server size
//===== To Do: ===============================================
//= Make Rewards Editable in game
//= Add A Vote4Event(ingame) Feature
//= Add Force End Comamnd
//= Add Devil Square Event
//= Add Disguise Event
//= Add Invasion Event
//= Add X-O Event
//= Add MVP Arena
//= Add Dead Branch Event
//= Add Requested Events
//= Add Ranking System
//===== Additional Comments: =================================
//= 2.00 Remake
//= 2.01 Fix bug in Lucky Pick
//===== Contact Ifo: =========================================
//= [Stolao] 
//= Email: Taingram11@gmail.com
//============================================================
prontera,151,192,4	script	Event Information	835,{
	function Func_Countdown;
	function Func_Add_Time;
	function Func_Prizes;
	freeloop(1);

//==================================
OnMenu:		//-- Click Menus
//==================================

	mes "[ Event Information ]";
	if($@CurrentEvent > 0)
		mes "Current Event: ",.ColorName$[$@CurrentEvent]," ";
	.@Time = gettime(4) * 24 + gettime(3);
	for(.@i = .@Time + ((gettime(2)>.StartTime?1:0)); .@i < .@Time + 168; .@i++){
		if($EVENT_CONTROL[.@i%168]){
			mes "Next Event:",.ColorName$[ $EVENT_CONTROL[ (.@i % 168) ] ] +" ~ "+ .Days$[ .@i % 168 / 24 ] +" - "+ Func_Add_Time( (.@i % 168) % 24);
			.@e += 1;
			break;
		}
	}
	if(!.@e) mes "Auto Events Disabled.";
	switch(select((($@CurrentEvent > 0)?" ~ Join event...:":":")+
			((.@e)?" ~ Check schedule...:":":")+
			((getgmlevel()<.GMAccess)?"":" ~ Manage events...")+
			": ~ ^777777Cancel^000000")) {
		case 2:
			next;
			mes "[ Sunday Event Schedule ]";
			for(.@i = 0; .@i < 168; .@i++){
				if($EVENT_CONTROL[.@i])
					mes .ColorName$[$EVENT_CONTROL[.@i]] +" ~ "+ Func_Add_Time(.@i % 24);
				if( !( ( .@i + 1 ) % 24 ) && .@i < 144){
					next;
					mes "[ "+ .Days$[.@i / 24 + 1] +" Event Schedule ]";
				}
			}	
			close;
		case 3:
		while(1){
			switch(select(" ~ Add a event...: ~ Delete a event...: ~ ^777777Go back^000000")) {
				case 1:
					next;
					mes "[ Add Event ]";
					mes "Pick a Day.";
					.@Day = select(" ~ "+implode(.Days$,": ~ ")) - 1;
					next;
					mes "[ Add Event ]";
					mes "Pick a Time for ^0055FF"+.Days$[.@D / 24]+".";
					.@menu$ = "";
					.@e = 0;
					for(.@i = .@Day * 24; .@i < .@Day * 24 + 24; .@i++){
						if(!$EVENT_CONTROL[.@i]){
							.@menu$ = .@menu$ +" ~ "+ Func_Add_Time( .@i % 24 ) +":";
							.@e += 1;
						} else	.@menu$ = .@menu$ + ":";
					}
					if(!.@e){
						mes "No Events Times Remaining for "+ .Days$[ .@Day ] +".";
						close;
					}
					.@D = select(.@menu$) + .@Day * 24 - 1;
					next;
					mes "[ Add Event ]";
					mes "Select a event for ^0055FF"+ .Days$[.@D / 24] +" ~ "+ Func_Add_Time(.@D % 24) +"^000000.";
					next;
					.@Event = select(implode(.ColorName$,": ~ ")) - 1;

					mes "Are you sure you want to add "+ .ColorName$[.@Event] +",";
					mes "for ^0055FF"+ .Days$[.@D / 24] +" ~ "+ Func_Add_Time(.@D % 24) +"^000000?";
					next;
					.@A = (select(" ~ ^0000CCAdd event...^000000: ~ ^777777Cancel^000000"));
					mes "[ Add Event ]";
					if(.@A == 2)
						mes "Cancelled.";
					else {
						$EVENT_CONTROL[.@D] = .@Event;
						mes "Event Added.";
					}
					break;
				case 2:
					next;
					mes "[ Remove Event ]";
					mes "Which Event?";
					.@menu$ = "";
					for(.@i = .@e = 0; .@i < 168; .@i++){
						if($EVENT_CONTROL[.@i]){
							.@menu$ = .@menu$ + .Days$[ .@i / 24 ] +" - "+ Func_Add_Time( .@i % 24 ) +" ~ "+ .ColorName$[ $EVENT_CONTROL[ .@i ] ]+":";
							.@e += 1;
						} else	.@menu$ = .@menu$ + ":";
					}
					if(!.@e){
						mes "No Events Setup.";
						close;
					}
					.@D = select(.@menu$) - 1;
					next;
					mes "[ Remove Event ]";
					mes "Are you sure you want to add the "+ .ColorName$[.@D] +",";
					mes "for ^0055FF"+ .Days$[.@D % 168 / 24] +" ~ "+ Func_Add_Time(.@D % 168 / 24) +"^000000?";
					.@A = (select(" ~ ^FF0000Remove event...^000000: ~ ^777777Cancel^000000"));
					if(.@A == 2){
						mes "Cancelled.";
					} else {
						$EVENT_CONTROL[.@D] = 0;
						mes "Event Removed.";
					}
					break;
				case 3:	next;
					goto OnMenu;
			}
		}
		case 4: close;
		case 1:
			next;
			break;
	}

//==================================
OnJoinEvent:	//-- Join Event
//==================================

	if($@CurrentEvent == 0) {
		mes "[ Event Management ]","Sorry no event is running.";
		end;
	}
	if($@CurrentEvent < 0) {
		mes "[ Event Management ]","Event already run, you can't enter.";
		end;
	}
	if($@CurrentEvent >= 1) {
		mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Want to join the "+ .ColorName$[$@CurrentEvent] +"?";
		if($@CurrentEvent == 2)
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Must be a Novice Level 10/10 or lower.";
		if(select("Yes:No") == 2)
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Ok come back later.",bc_self|bc_blue;
		else if((Baselevel > 10 || JobLevel > 10 || Class != Job_Novice ) && $@CurrentEvent == 2){
			mes "[ "+ .EventName$[$@CurrentEvent] +" ]","Sorry you must be a Novice Level 10/10 or lower.";
		} else if($@CurrentEvent < 1){
			mes "[ Event Management ]","Sorry event closed before you hit yes.";
		} else {
			warp .EnterMap$[$@CurrentEvent],.EnterX[$@CurrentEvent],.EnterY[$@CurrentEvent];
			end;
		}
	}
	close;

//==================================
OnRunEvent:	//-- GM Run
//==================================

	if($@CurrentEvent)
		mes "[ Event Management ]","Sorry an event is already running";
	else if(agitcheck() || agitcheck2())
		mes "[ Event Management ]","Sorry cannot run event during woe";
	else {
		mes "[ Event Management ]","Pick an Event.";
		.@i = select(implode(.ColorName$,": ~ ")) - 1;
	} 
	switch(.@i){
		default:						break;
		case 1: donpcevent strnpcinfo(1)+"::OnDiceStart";	break;
		case 2: donpcevent strnpcinfo(1)+"::OnPvPStart";	break;
		case 3: donpcevent strnpcinfo(1)+"::OnMazeStart";	break;
		case 4: donpcevent strnpcinfo(1)+"::OnPoringStart";	break;
		case 5: donpcevent "Cluckers::OnEventStart";		break;
		case 6: donpcevent strnpcinfo(1)+"::OnBombStart";	break;
		case 7: donpcevent strnpcinfo(1)+"::OnShroomStart";	break;
	}
	close;

//==================================
		//-- Functions
//==================================

function Func_Add_Time {
	return ( ( (getarg(0) < 10)?"0":"" ) + getarg(0) + "." + ( (.StartTime < 10)?"0":"" ) + .StartTime );
}

function Func_Countdown {
	for(.@i = 5; .@i > 0; .@i--){
		announce .EventName$[$@CurrentEvent]+" will begin in "+ callfunc("F_InsertPlural",.@i,"minute") +"!",bc_all|bc_blue;
		Announce "Please type @joinevent to join",bc_all|bc_blue;
		sleep 60000;
	}
	Announce .EventName$[$@CurrentEvent] +" Has Begun!",bc_all|bc_blue;
	return;
}

function Func_Prizes {
	announce "Congrats "+strcharinfo(0,getarg(0))+", a winner in the "+getarg(1)+" Event.",bc_all|bc_blue;
	switch($@CurrentEvent){
		default: break;
		case -1: getitem $@RewardID,$@RewardQNT1;	break;
		case -2: getitem $@RewardID,$@RewardQNT2;	break;
		case -3: getitem $@RewardID,$@RewardQNT3;	break;
		case -4: getitem $@RewardID,$@RewardQNT4;	break;
		case -5: getitem $@RewardID,$@RewardQNT5;	break;
		case -6: getitem $@RewardID,$@RewardQNT6;	break;
		case -7: getitem $@RewardID,$@RewardQNT7;	break;
	}
}

//==================================
OnMinute00:	//- Start Events
//==================================

	if(agitcheck() || agitcheck2() || $@CurrentEvent) end;
	sleep .StartTime * 60000 + 1000;
	.@Time = gettime(4) * 24 + gettime(3);
	switch($EVENT_CONTROL[.@Time]){
		default:						break;
		case 1: donpcevent strnpcinfo(1)+"::OnDiceStart";	break;
		case 2: donpcevent strnpcinfo(1)+"::OnPvPStart";	break;
		case 3: donpcevent strnpcinfo(1)+"::OnMazeStart";	break;
		case 4: donpcevent strnpcinfo(1)+"::OnPoringStart";	break;
		case 5: donpcevent "Cluckers::OnEventStart";		break;
		case 6: donpcevent strnpcinfo(1)+"::OnBombStart";	break;
		case 7: donpcevent strnpcinfo(1)+"::OnShroomStart";	break;
	}
	end;

//==================================
OnDiceStart:	//-- Dice Event 
//==================================

	mapwarp "quiz_01","dewata",199,176;
	$@CurrentEvent = 1;
	Func_Countdown;
	$@CurrentEvent = -1;
	sleep 9000;
	if(getmapusers("quiz_01") < .MinPlayers[1]){
		mapannounce "quiz_01","Event Stopped! Not Enough Players Joined the "+.EventName$[3]+"!",bc_blue;
		mapwarp "quiz_01","dewata",199,176;
		$@CurrentEvent = 0;
		end;
	} else {
		mapannounce "quiz_01","Ok the rules of "+.EventName$[3]+" are as follows",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","Each player picks a box 1, 2, 3 or 4",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","There will be a count down from 10 to 0",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","at 0 a four sided die will be rolled",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","Anyone in the box of the number rolled will be warped to town",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","as well as anyone on the stairs or outside the box",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","the number of players remaining will be announced",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","this prosses will repeat till only one player remains",bc_blue;
		sleep 5000;
		mapannounce "quiz_01","take a few moments to fnd a box",bc_blue;
		sleep 15000;
		mapannounce "quiz_01","we will now begin, please find a box",bc_blue;
		sleep 6000;
		for(.@1234 = 0; .@1234 < 100; .@1234++){
			for(.@i = 10; .@i > 0; .@i--){
				mapannounce "quiz_01",.@i+"...",bc_blue;
				sleep 1000;
			}
			.@i = rand(1,4);
			mapannounce "quiz_01","0... Good Bye Box "+.@i,bc_blue;
			switch(.@i){
				case 1:	areawarp "quiz_01",183,81,191,59,"dewata",199,176;	break;
				case 2:	areawarp "quiz_01",195,81,203,59,"dewata",199,176;	break;
				case 3:	areawarp "quiz_01",207,81,215,59,"dewata",199,176;	break;
				case 4:	areawarp "quiz_01",219,81,227,59,"dewata",199,176;	break;
			}
			areawarp "quiz_01",182,94,228,88,"dewata",199,176;	//Upper Area
			areawarp "quiz_01",185,87,188,82,"dewata",199,176;	//Stairs 1
			areawarp "quiz_01",197,87,200,82,"dewata",199,176;	//Stairs 2
			areawarp "quiz_01",209,87,212,82,"dewata",199,176;	//Stairs 3
			areawarp "quiz_01",221,87,224,82,"dewata",199,176;	//Stairs 4
			if(getmapusers("quiz_01") <= 1){
				.@1234 += 100;
			} else {
				mapannounce "quiz_01","There are "+getmapusers("quiz_01")+" Players Remaining.",bc_blue;
				mapannounce "quiz_01","Take a few moments if you want to change boxes.",bc_blue;
				sleep 20000;
			}
		}
		if(getmapusers("quiz_01")){
			addrid(5,0,"quiz_01");
			if(HP > 0 && strcharinfo(3) == "quiz_01")
				Func_Prizes(getcharid(0),.EventName$[1]);
		}
		$@CurrentEvent = 0;
		end;
	}

//==================================
OnPvPStart:	//-- PvP Event
//==================================

	mapwarp "desert","dewata",199,176;
	pvpoff "desert";
	$@CurrentEvent = 2;
	Func_Countdown;
	$@CurrentEvent = -2;
	sleep 9000;
	if(getmapusers("desert") < .MinPlayers[2]){
		mapannounce "desert","Event Stopped! Not Enough Players Joined the "+.EventName$[4]+"!",bc_blue;
	} else {
		mapannounce "desert","The Rules of "+.EventName$[4]+" are as follows",bc_blue;
		sleep 5000;
		mapannounce "desert","This is a Free for all Last man Standing",bc_blue;
		sleep 5000;
		mapannounce "desert","there is a 20 min time limit in place if there is no clear winner within 20 mins the Event ends",bc_blue;
		sleep 5000;
		mapannounce "desert","Everyone has 1 Life so Res, Ygg Leafs and Kazail dont work",bc_blue;
		sleep 5000;
		mapannounce "desert","Spread out PVP will begin in 10...",bc_blue;
		sleep 1000;
		for(.@i = 9; .@i > 0; .@i--){
			mapannounce "desert",.@i+"...",bc_blue;
			sleep 1000;
		}
		pvpon "desert";
		mapannounce "desert","Begin",bc_blue;
		sleep 5000;
		for(.@P = 0; .@P < 20; .@P++){
			if(getmapusers("desert") < 2){
				.@P += 20;
			} else	mapannounce "desert","There are "+getmapusers("desert")+" Players Remaining",bc_blue;
			sleep 60000;
		}
		if(getmapusers("desert") == 1){
			addrid(5,0,"desert");
			if(HP > 0 && strcharinfo(3) == "desert")
				Func_Prizes(getcharid(0),.EventName$[2]);
		} else {
			mapannounce "desert","Time Is up",bc_blue;
		}
	}
	pvpoff "desert";
	$@CurrentEvent = 0;
	mapwarp "desert","dewata",199,176;
	end;

//==================================
OnMazeStart:	//-- Maze Event
//==================================

	mapwarp "maze","dewata",199,176;
	enablenpc "Event_Agent#Maze";
	disablenpc "Event_Agent#Maze";
	$@CurrentEvent = 3;
	Func_Countdown;
	$@CurrentEvent = -3;
	sleep 9000;
	if(getmapusers("maze") < .MinPlayers[3]){
		mapannounce "maze","Event Stopped! Not Enough Players Joined the "+.EventName$[5]+"!",bc_blue;
	} else {
		mapannounce "maze","Rules are simple first to get to end of maze wins, so begin~",bc_blue;
		disablenpc "mazeroadblock";
		enablenpc "Event_Agent#Maze";
		for(.@maze = 40; .@maze > 0; .@maze--){
			if(getmapusers("maze")<1) .@maze = 0;
			mapannounce "maze","There are "+(.@maze)+" Minuets Remaining",bc_blue;
			sleep 60000;
		}
	mapannounce "maze","Time Is up",bc_blue;
	}
	disablenpc "Event_Agent#Maze";
	sleep 5000;
	mapwarp "maze","dewata",199,176;
	$@CurrentEvent = 0;
	end;

//==================================
OnPoringStart:	//-- Poring Event
//==================================

	mapwarp "poring_c01","dewata",199,176;
	$@CurrentEvent = 4;
	pvpoff "poring_c01";
	setmapflag "poring_c01",mf_noskill;
	Func_Countdown;
	$@CurrentEvent = -4;
	if(getmapusers("poring_c01") < .MinPlayers[4]){
		mapannounce "poring_c01","Event Stopped! Not Enough Players Joined the "+.EventName$[6]+"!",bc_blue;
	} else {
		mapannounce "poring_c01","Rules are simple",bc_blue;
		sleep 3000;
		mapannounce "poring_c01","Kill the 'Poring' with the correct name, and get a warped to town with a prize.",bc_blue;
		sleep 4000;
		mapannounce "poring_c01","Kill the wrong one and get warped to town with nothing.",bc_blue;
		sleep 4000;
		mapannounce "poring_c01","There are 2 right poring and a 30 min timer.",bc_blue;
		sleep 4000;
		mapannounce "poring_c01","Event will now Begin~",bc_blue;
		for(.@i = 0; .@i < getarraysize(.Poring$); .@i++){
			monster "poring_c01",0,0,.Poring$[.@i],1725,5,strnpcinfo(1)+"::OnKillWrong";
		}
		monster "poring_c01",0,0,"--ja--",1725,2,strnpcinfo(1)+"::OnKillRight";
 		for(.@poring = 30; .@poring > 0; .@poring--){
			if(getmapusers("poring_c01") < 1) .@poring = 0;
			mapannounce "poring_c01",callfunc("F_InsertPlural",.@poring,"Minute")+" Remaining.",bc_blue;
			sleep 60000;
		}
	}
	mapannounce "poring_c01","Time Is up",bc_blue;
	killmonsterall "poring_c01";
	removemapflag "poring_c01",mf_noskill;
	$@CurrentEvent = 0;
	sleep 5000;
	mapwarp "poring_c01","dewata",199,176;
	end;

OnKillWrong:
	monster "poring_c01",0,0,.Poring$[rand(1,getarraysize($@Mobs))],1725,1,strnpcinfo(1)+"::OnKillWrong";
	warp "dewata",199,176;
	end;

OnKillRight:
	Func_Prizes(getcharid(0),.EventName$[4]);
	warp "dewata",199,176;
	end;

//==================================
OnBombStart:	//-- Bombring Event
//==================================

	mapwarp "quiz_02","dewata",199,176;
	$@CurrentEvent = 5;
	Func_Countdown;
	$@CurrentEvent = -5;
	.@totalplayers = getmapusers("quiz_02");
	if(.@totalplayers < .MinPlayers[5]){
		mapannounce "quiz_02","Event Stopped! Not Enough Players Joined the "+.EventName$[9]+"!",bc_blue;
		mapwarp "quiz_02","dewata",199,176;
	} else {
		for ( .@i = 0; .@i < getarraysize( .bombflag ); .@i++ )
			setmapflag "quiz_02", .bombflag[.@i];
		mapannounce "quiz_02","Okay listen up, this is how it works.",bc_blue;
		sleep 2000;
		mapannounce "quiz_02","Bombrings will run rampant in this area.",bc_blue;
		sleep 2000;
		mapannounce "quiz_02","and all of them will go booooooom!",bc_blue;
		sleep 2000;
		mapannounce "quiz_02","all you have to do is avoid them and stay alive :P",bc_blue;
		sleep 2000;
		mapannounce "quiz_02","This will run for 30 seconds for 5 total rounds.",bc_blue;
		sleep 2000;
		mapannounce "quiz_02","Sooooooooooo, ready or not here they come!!!",bc_blue;
		sleep 25000;
		for(.@wave = 1; .@wave <= 5; .@wave++){
			if(.@wave < 5){
				mapannounce "quiz_02","Wave "+.@wave+"!",bc_blue;
			} else	mapannounce "quiz_02","FIANL WAVE!",bc_blue;

			if ( (3 * .@totalplayers) <= 60)
				areamonster "quiz_02",48,334,71,357,"Run for you life!",1904,3 * .@totalplayers;
			else	areamonster "quiz_02",48,334,71,357,"Run for you life!",1904,60;
			if(!getmapusers("quiz_02"))
				.@wave += 10;
			else	sleep 1000 * 5 / .@wave;
		}
		sleep 30000;
		if(getmapusers("quiz_02")){
			addrid(5,0,"quiz_02");
			if(HP > 0 && strcharinfo(3) == "quiz_02")
				Func_Prizes(getcharid(0),.EventName$[5]);
		}
		for ( .@i = 0; .@i < getarraysize( .bombflag ); .@i++ )
			removemapflag "quiz_02", .bombflag[.@i];
	}
	$@CurrentEvent = 0;
	end;

//==================================
OnShroomStart:	//-- Mushroom Event
//==================================

	.Map$ = .ShroomMaps$[rand(getarraysize(.ShroomMaps$))];
	killmonster .Map$,"All";
	$@CurrentEvent = 11;
	.EnterMap$[$@CurrentEvent] = .Map$;
	Func_Countdown;
	.@Spawn = .Spawn = rand(1,getusers(1) / 5);
	if(1 > .Spawn) .@Spawn = .Spawn = 1;
	monster .Map$,0,0,"Please don't kill me!",1084,.Spawn,strnpcinfo(0)+"::OnShroomKilled";
	announce "Find the Mushroom : Total of "+.Spawn+" Mushrooms have been spawned in "+.Map$+"!",bc_blue;
	sleep 60000 * 45;
	if(.Spawn == .@Spawn) Announce .EventName$[11]+" Has Ended with No Winner!",bc_blue;
	killmonster .Map$,"All";
	$@CurrentEvent = 0;
	end;

OnShroomKilled:
	.Spawn--;
	Func_Prizes(getcharid(0),.EventName$[6]);
	if (.Spawn) announce "[ "+strcharinfo(0)+" ] has killed a Mushroom. There are now "+.Spawn+" Mushroom(s) left.",bc_map|bc_blue;
	else {
		announce "The Mushroom Event has ended. All the Mushrooms have been killed.",bc_blue;
		$@CurrentEvent = 0;
	}
	end;

//==================================
OnInit:		//-- Config
//==================================

// -------------------
//  Rewards
// -------------------

	// Does not support multiple item rewards
	// Rewards directly deliver to player
	$@RewardID = 50058;
	$@RewardQNT1 = 5;		//dice
	$@RewardQNT2 = 5;		//pvp
	$@RewardQNT3 = 10;		//maze
	$@RewardQNT4 = 5;		//poring
	$@RewardQNT5 = 5;		//cluckers
	$@RewardQNT6 = 2;		//bombring
	$@RewardQNT7 = 5;		//mushroom

// -------------------
//  At Commands
// -------------------

	// Run Event Command to manually run event
	bindatcmd("runevent",strnpcinfo(1)+"::OnRunEvent",60,99);

	// Join Event Command
	bindatcmd("joinevent",strnpcinfo(1)+"::OnJoinEvent",0,99);

// -------------------
//  Event Data
// -------------------

	// Gm Level to access GM Menus
	.GMAccess = 99;

	// How Many Mins after the hour till event starts
	// Don't forget 5 mins for Func_Countdown
	.StartTime = 25;

	// Event Names
	setarray .EventName$[1],
		"Dice Event","PvP Event","Maze Event",
		"Find The Poring","Cluckers","Bombring Event",
		"Find The Mushroom";

	// Colored Event Names
	setarray .ColorName$[1],
		"^00CC00Dice Event^000000","^CC0000PvP Event^000000","^00CC00Maze Event^000000",
		"^00CCCCFind The Poring^000000","^00CC00Cluckers^000000","^CC00CCBombring Event^000000",
		"^00CCCCFind The Mushroom^000000";

	// Min Players
	//	Cluckers & Mushroom don't check
	setarray .MinPlayers[1],
		2,2,2,
		1,0,1,
		0;

	// @JoinEvent warp points
	setarray .EnterMap$[1],
		"quiz_01","desert","maze",
		"poring_c01","prontera","quiz_02",
		"prontera";

	setarray .EnterX[1],
		205,51,371,
		104,155,59,
		0;

	setarray .EnterY[1],
		92,62,143,
		114,227,345,
		0;

	// Fake Poring Names
	setarray .Poring$,"Porjng","P0ring","Porlng","Porimg","Porinq","Poporing","This One","Right","Kill Me","Poning","qoring","Pooring","Pouring","Polling","~Poring~","Winner","Prize","Porirg","Paring";

	// Bombring Mapflags
	setarray .bombflag,mf_nowarp,mf_nowarpto,mf_nosave,mf_nomemo,mf_noteleport,mf_nopenalty,mf_noreturn,mf_nobranch,mf_nomobloot,mf_nomvploot;

	// Mushroom Event Possible Maps
	setarray .ShroomMaps$[0],"izlude","geffen","morocc","prontera";


// -------------------
//  Don't Touch Ever
// -------------------

	$@CurrentEvent = 0;
	if( .StartTime > 59 ) .StartTime = 59;
	if( .StartTime < 0 ) .StartTime = 0;
	setarray .Days$[0],"Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday";
	end;
}

//==================================
//-- Maze Event Extras
//==================================

maze,358,148,0	warp	mazeroadblock	2,2,maze,371,149

maze,369,162,4	script	Event_Agent#Maze	405,4,4,{
	mes "[Event Agent]";
	mes "Walk up to me to claim prize~";
	close;

OnTouch_:
	announce "Congrats "+strcharinfo(0)+", a winner in the Maze Event.",bc_all|bc_blue;
	getitem $@RewardID,$@RewardQNT3;
	mapwarp "maze","dewata",199,176;
	$@CurrentEvent = 0;
	end;
}

//==================================
//-- Cluckers Event 
//==================================

prontera,155,227,4	script	Cluckers	800,{
	if ($@CurrentEvent == -7) {
		specialeffect2 EF_HIT3;
		switch(rand(16)) {
			case 0: npctalk "CLUUUUUUCK!!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 1: npctalk "Cluuuuuck!~"; break;
			case 2: unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; break;
			case 3: sc_start SC_Freeze,10000,0; break;
			case 4: npctalk "CLUUUUUUUUUCK!!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 5: sc_start SC_Sleep,10000,0; break;
			case 6: sc_start SC_Stone,10000,0; emotion e_gg; break;
			case 7: npctalk "CLUUUUUUCK!!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 8: npctalk "Cluck! CLUUUCK!!"; unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; emotion e_omg; break;
			case 9: sc_start SC_Stun,10000,0; break;
			case 10: sc_start SC_Sleep,10000,0; emotion e_gg; break;
			case 11: npctalk "Cluck! Cluck!"; break;
			case 12: sc_start SC_Stun,10000,0; break;
			case 13: unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1; break;
			default:
				if (!rand(7)) {
					npctalk "WOOF!...........";
					specialeffect2 EF_SPHERE;
					announce "Congrats "+strcharinfo(0)+", a winner in the Cluckers Event.",bc_all|bc_blue;
					getitem $@RewardID,$@RewardQNT7;
					$@CurrentEvent = 0;
				} else {
					npctalk "Cluck! CLUUUCK!!";
					unitkill getcharid(3); skilleffect "NPC_SELFDESTRUCTION",1;
					npcwalkto rand(152,159),rand(234,241);
				}
				break;
		}
		end;
	}
	mes "Cluck cluck! Cluuuuuck?";
	mes "Cluck....";
	close;

OnTimer15000:
	npcwalkto 70+rand(17),135+rand(16);
	setnpctimer 0;
	end;

OnInit:
	npcspeed 75;
	npcwalkto rand(152,159),rand(234,241);
 	initnpctimer;
	end;

OnEventStart:
	$@CurrentEvent = 7;
	for(.@i = 5; .@i > 0; .@i--){
		Announce "Cluckers Event Will begin in "+callfunc("F_InsertPlural",.@i,"minute")+"!",bc_blue;
		Announce "Please type @joinevent to join",bc_blue;
		sleep 60000;
	}
	Announce "Cluckers Event Has Begun!",bc_blue;
	$@CurrentEvent = -7;
	sleep 60000 * 45;
	if($@CurrentEvent == -7){
		$@CurrentEvent = 0;
		Announce "Cluckers Event Has Ended with No Winner!",bc_blue|bc_area|bc_npc;
	}
	end;
}